"""This script replaces a CPACS discipline with a surrogate model using a pickled Discipline object.

When calling from the command line, three mandatory arguments have to be provided.

-s [--smfile]: Link to pickled Discipline as generated by SAS
-i [--input]: Link to input CPACS file
-o [--output]: Link to output CPACS file
"""

import pickle
import sys
import getopt

# Retrieve arguments from command line
argument_list = sys.argv[1:]

# Mandatory arguments
short_options = "s:i:o:"
long_options = ["smfile=", "input=", "output="]

try:
    arguments, values = getopt.getopt(argument_list, short_options, long_options)
except getopt.error as err:
    # Output error, and return with an error code
    print(str(err))
    sys.exit(2)

pickled_discipline = None
cpacs_in = None
cpacs_out = None

# Evaluate given options
for current_argument, current_value in arguments:
    if current_argument in ("-s", "--smfile"):
        pickled_discipline = current_value
    elif current_argument in ("-i", "--input"):
        cpacs_in = current_value
    elif current_argument in ("-o", "--output"):
        cpacs_out = current_value

assert (pickled_discipline is not None and cpacs_in is not None and cpacs_out is not None), "Not all inputs provided"

# Load surrogate model
with open(pickled_discipline, 'rb') as f:
    surrogate = pickle.load(f)

# Execute trained surrogate model and write response to output cpacs
surrogate.write_cpacs_response(cpacs_in=cpacs_in,
                               cpacs_out=cpacs_out)
